[alias]

    br  = branch
    c   = commit
    ca  = !git add -A && git commit             # Commit all changes.
    co  = checkout
    cp  = cherry-pick
    d   = diff -- . ':!*package-lock.json' ':!*yarn.lock'
    dc  = diff --cached -- . ':!*package-lock.json' ':!*yarn.lock'
    f   = fetch
    g   = log --graph --pretty=custom           # Show custom graph.
    git = !exec git                             # Allow `$ git git git...`
    l   = log --pretty=custom                   # Show custom log.
    lc  = shortlog --email --numbered --summary # List contributors.
    p   = push
    r   = rebase
    st  = status
    w   = instaweb --httpd=webrick              # Start web-based visualizer.


[color "branch"]

    current = green bold
    local = green
    remote = yellow

[color "diff"]

    frag = magenta
    meta = yellow

    new = green
    old = red

    newMoved = cyan
    oldMoved = blue

[color "status"]

    added = green reverse
    changed = yellow reverse
    untracked = red reverse

[core]

    abbrev = 12
    attributesfile = ~/.gitattributes
    autocrlf = input
    editor = vim
    excludesfile = ~/.gitignore

[diff]

    # Show blocks of moved text of at least 20
    # alphanumeric characters differently than adds/deletes.
    #
    # https://git-scm.com/docs/git-diff#git-diff-zebra

    colorMoved = zebra

[diff "bin"]

    # Use `hexdump` to diff binary files.

    textconv = hexdump -v -C

[pretty]

    custom = "%C(magenta)%h%C(red)%d %C(yellow)%ar %C(green)%s %C(yellow)(%an)"
    #                     │        │            │            │             └─ author name
    #                     │        │            │            └─ message
    #                     │        │            └─ date (relative)
    #                     │        └─ decorations (branch, heads or tags)
    #                     └─ hash (abbreviated)


[push]

    # Make `git push` automatically push relevant
    # annotated tags when pushing branches out.

    followTags = true

[user]

    # Do not guess the user's identity.
    # https://github.com/git/git/blob/90f7b16b3adc78d4bbabbd426fb69aa78c714f71/Documentation/config.txt#L2847-L2855

    useConfigOnly = true

    # [!] DO NOT store sensitive information such as the Git user
    # credentials (`name` / `email`), or things such as the `signingkey`
    # in this file, add them in `~/.gitconfig.local`!
    #
    # See also: https://github.com/alrra/dotfiles#gitconfiglocal

[include]

    # Load local configs.
    # https://git-scm.com/docs/git-config#_includes
    #
    # [!] The following needs to remain at the end of this file in
    #     order to allow any of the above configs to be overwritten
    #     by the local ones

    path = ~/.gitconfig.local
